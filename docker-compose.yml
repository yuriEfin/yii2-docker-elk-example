version: '3.5'

services:
  web:
    build: ./docker/frontend
    image: 'nginx:latest'
    hostname: frontend
    container_name: 'yii_web'
    ports:
      - 8002:80
      - 8001:80
    env_file:
      - .env
    environment:
      - APP_PATH=${APP_PATH}
      - NGINX_HOST_FRONTEND=${NGINX_HOST_FRONTEND}
      - NGINX_HOST_BACKEND=${NGINX_HOST_BACKEND}
      - NGINX_PORT_BACKEND=80
      - NGINX_PORT_FRONTEND=80
    volumes:
      - ./src:/src:cached
    links:
      - php

  php:
    build: .
    hostname: php_backend
    container_name: 'yii_php'
    ports:
      - 9001:9000
    volumes:
      - ~/.composer-docker/cache:/root/.composer/cache:delegated
      - ./src:/src:delegated
      - ./src/vendor:/src/vendor
    env_file:
      - ./.env
    environment:
      - app_path=/src
      - APP_PATH=/src
      - COMPOSER=/src/composer.json
      - COMPOSER_VENDOR_DIR=/src/vendor
      - PHP_ENABLE_XDEBUG=1
      - XDEBUG_CONFIG="serverName=backend.work remote_enable=1 remote_mode=req remote_port=9000 remote_host=172.19.0.1 idekey=PHPSTORM"
    links:
      - mysql_percona
      - redis
      - elasticsearch

  memcached:
    container_name: memcached
    image: memcached:latest
    ports:
      - "11211:11211"

  mysql_percona:
    image: percona
    container_name: 'yii_mysql'
    restart: always
    environment:
      MYSQL_USER: percona
      MYSQL_PASSWORD: qwqwqw
      MYSQL_ROOT_PASSWORD: qwqwqw

  redis:
    image: redis
    container_name: 'yii_redis'
    ports:
      - 6382:6381

  elasticsearch:
    hostname: elasticsearch
    container_name: 'elasticsearch'
    image: docker.io/bitnami/elasticsearch:8
    ports:
      - 9200:9200
    volumes:
      - "elasticsearch_data:/bitnami/elasticsearch"

  logstash:
    image: docker.io/bitnami/logstash:8
#    build: ./docker/logstash
    hostname: logstash
    container_name: 'logstash'
    ports:
      - 8080:8080
      - 3333:3333
    volumes:
      - logstashdata:/bitnami
    depends_on:
      - elasticsearch

  kibana:
    image: docker.io/bitnami/kibana:8
    hostname: kibana
    container_name: 'kibana'
    ports:
      - "5601:5601"
    volumes:
      - "kibana_data:/bitnami/kibana"
    env_file:
      - ./docker/kibana/.env
    depends_on:
      - elasticsearch

volumes:
  data01:
    driver: local
  elasticsearch_data:
    driver: local
  kibana_data:
    driver: local
  logstashdata:
    driver: local

networks:
  default:
    driver: bridge

  elastic:
    driver: bridge
