version: '3.5'

services:
  web:
    build: ./docker/frontend
    image: 'nginx:latest'
    hostname: frontend
    container_name: 'yii_web'
    ports:
      - 8002:80
      - 8001:80
    env_file:
      - .env
    environment:
      - APP_PATH=${APP_PATH}
      - NGINX_HOST_FRONTEND=${NGINX_HOST_FRONTEND}
      - NGINX_HOST_BACKEND=${NGINX_HOST_BACKEND}
      - NGINX_PORT_BACKEND=80
      - NGINX_PORT_FRONTEND=80
    volumes:
      - ./src:/src:cached
    links:
      - php

  php:
    build: .
    hostname: php_backend
    container_name: 'yii_php'
    ports:
      - 9001:9000
    volumes:
      - ~/.composer-docker/cache:/root/.composer/cache:delegated
      - ./src:/src:delegated
      - ./src/vendor:/src/vendor
    env_file:
      - ./.env
    environment:
      - app_path=/src
      - APP_PATH=/src
      - COMPOSER=/src/composer.json
      - COMPOSER_VENDOR_DIR=/src/vendor
      - XDEBUG_CONFIG="serverName=0.0.0.0 remote_enable=1 remote_mode=req remote_port=9000 remote_host=172.17.0.1 idekey=PHPSTORM"
    links:
      - mysql_percona
      - redis

  memcached:
    container_name: memcached
    image: memcached:latest
    ports:
      - "11211:11211"

  mysql_percona:
    image: percona
    container_name: 'yii_mysql'
    restart: always
    environment:
      MYSQL_USER: percona
      MYSQL_PASSWORD: qwqwqw
      MYSQL_ROOT_PASSWORD: qwqwqw

  redis:
    image: redis
    container_name: 'yii_redis'
    ports:
      - 6382:6381

  elastic:
    image: elasticsearch:8.1.3
    container_name: elastic
    ports:
      - 9200:9200

  kibana:
    image: kibana:8.1.3
    container_name: kibana
    ports:
      - 5601:5601
    environment:
      ELASTICSEARCH_URL: http://elastic:9200
      ELASTICSEARCH_HOSTS: '["http://elastic:9200"]'
    links:
      - elastic

networks:
  default:
    driver: bridge